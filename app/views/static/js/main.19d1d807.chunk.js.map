{"version":3,"sources":["http-common.js","services/auth-header.js","services/location.service.js","services/auth.service.js","components/add-location.component.js","services/user.service.js","components/location.component.js","components/locations-list.component.js","components/add-user.component.js","components/user.component.js","components/users-list.component.js","components/private-route.component.js","components/login.component.js","components/reset-password.component.js","components/request-token.component.js","components/home.component.js","components/profile.component.js","App.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","authHeader","user","JSON","parse","localStorage","getItem","accessToken","console","log","http","get","id","data","post","put","delete","title","API_URL","email","password","then","response","setItem","stringify","removeItem","username","token","AddLocation","props","onChangeTitle","bind","onChangeDescription","saveLocation","newLocation","state","description","published","submitted","loggedInUser","isLoggedIn","isMod","isAdmin","AuthService","getCurrentUser","this","setState","roles","includes","e","target","value","authorId","LocationDataService","catch","className","href","onClick","htmlFor","type","required","onChange","name","Component","Location","onChangeAuthorId","getLocation","onChangeLatitude","onChangeLongitude","getAuthor","getAllAuthors","updatePublished","updateLocation","deleteLocation","currentLocation","latitude","longitude","message","allAuthors","match","params","prevState","UserDataService","getAll","status","update","history","push","length","map","author","index","LocationsList","onChangeSearchTitle","onToggleOwnFilter","retrieveLocations","refreshList","setActiveLocation","removeAllLocations","searchTitle","locations","currentIndex","hideOtherAuthors","findByAuthor","location","deleteAll","findByTitle","placeholder","defaultChecked","to","role","isEmail","vusername","vpassword","AddUser","onChangeUsername","onChangePassword","onChangeRole","onChangeEmail","saveUser","newUser","success","preventDefault","form","validateAll","checkBtn","context","_errors","onSubmit","ref","c","validations","style","display","User","onChangeDoUpdatePassword","onChangeRoleId","getUser","updateUser","deleteUser","currentUser","roleId","newPassword","doUpdatePassword","undefined","updatePassword","disabled","0","1","2","3","UsersList","onChangeSearchUsername","retrieveUsers","setActiveUser","removeAllUsers","searchUsername","users","currentUsername","findByUsername","PrivateRoute","component","auth","authCheckComplete","rest","render","pathname","from","Login","handleLogin","loading","login","window","error","resMessage","toString","src","alt","ResetPassword","resetPassword","checkToken","RequestToken","requestToken","Home","content","Profile","App","logOut","logout","exact","path","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19d1d807.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: process.env.NODE_ENV == \"development\" ?  \"http://localhost:8080/api/\" : \"https://sphc-melbourne-map.herokuapp.com/api/\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  if (user && user.accessToken) {\r\n    // for Node.js Express back-end\r\n    return { 'x-access-token': user.accessToken };\r\n  } else {\r\n    return {};\r\n  }\r\n}","import http from \"../http-common\";\r\nimport authHeader from './auth-header';\r\n\r\nclass LocationDataService {\r\n  getAll() {\r\n    console.log(authHeader());\r\n    return http.get(\"/locations\", { headers: authHeader() });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/locations/${id}`, { headers: authHeader() });\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/locations\", data, { headers: authHeader() });\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/locations/${id}`, data, { headers: authHeader() });\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/locations/${id}`, { headers: authHeader() });\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/locations`, { headers: authHeader() });\r\n  }\r\n\r\n  findByTitle(title) {\r\n    return http.get(`/locations?title=${title}`, { headers: authHeader() });\r\n  }\r\n\r\n  findByAuthor(id) {\r\n    return http.get(`/locations/author/${id}`, { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new LocationDataService();","import axios from \"axios\";\r\n\r\nconst API_URL = process.env.NODE_ENV == \"development\" ? \"http://localhost:8080/api/auth/\" : \"https://sphc-melbourne-map.herokuapp.com/api/auth/\";\r\nconsole.log(\"API_URL\" + API_URL);\r\n\r\nclass AuthService {\r\n  login(email, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        email,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n\r\n  requestToken(email) {\r\n    return axios\r\n      .post(API_URL + \"request-token\", {\r\n        email\r\n      })\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  checkToken(id,token) {\r\n    return axios\r\n      .post(API_URL + \"check-token\", {\r\n        id,\r\n        token\r\n      })\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  }\r\n  resetPassword(email, token, id,password) {\r\n    return axios\r\n      .post(API_URL + \"reset-password\", {\r\n        email,\r\n        token,\r\n        id,\r\n        password\r\n      })\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { Component } from \"react\";\r\nimport LocationDataService from \"../services/location.service\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\nexport default class AddLocation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.saveLocation = this.saveLocation.bind(this);\r\n    this.newLocation = this.newLocation.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\", \r\n      published: false,\r\n      submitted: false,\r\n      loggedInUser: null,\r\n      isLoggedIn:false,\r\n      isMod: false,\r\n      isAdmin: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const loggedInUser = AuthService.getCurrentUser();\r\n\r\n    if (loggedInUser) {\r\n      this.setState({\r\n        loggedInUser: loggedInUser.id,\r\n        isLoggedIn:true,\r\n        isMod: loggedInUser.roles.includes(\"ROLE_MODERATOR\"),\r\n        isAdmin: loggedInUser.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  saveLocation() {\r\n    var data = {\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n      authorId:this.state.loggedInUser\r\n    };\r\n\r\n    LocationDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          description: response.data.description,\r\n          published: response.data.published,\r\n          submitted: true\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newLocation() {\r\n    this.setState({\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      published: false,\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <a className=\"btn\" href={'/admin/locations/' + this.state.id}>\r\n              View location\r\n            </a>\r\n            <button className=\"btn btn-success\" onClick={this.newLocation}>\r\n              Add another location\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                required\r\n                value={this.state.title}\r\n                onChange={this.onChangeTitle}\r\n                name=\"title\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            \r\n\r\n            <button onClick={this.saveLocation} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import http from \"../http-common\";\r\nimport authHeader from './auth-header';\r\n\r\nclass UserDataService {\r\n  getAll() {\r\n    return http.get(\"/users\", { headers: authHeader() });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/users/${id}`, { headers: authHeader() });\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/users\", data, { headers: authHeader() });\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/users/${id}`, data, { headers: authHeader() });\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/users/${id}`, { headers: authHeader() });\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/users`, { headers: authHeader() });\r\n  }\r\n\r\n  findByUsername(username) {\r\n    return http.get(`/users?username=${username}`, { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserDataService();\r\n\r\n","import React, { Component } from \"react\";\r\nimport LocationDataService from \"../services/location.service\";\r\nimport UserDataService from \"../services/user.service\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Location extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeAuthorId = this.onChangeAuthorId.bind(this);\r\n    this.getLocation = this.getLocation.bind(this);\r\n    this.onChangeLatitude = this.onChangeLatitude.bind(this);\r\n    this.onChangeLongitude = this.onChangeLongitude.bind(this);\r\n    this.getAuthor = this.getAuthor.bind(this);\r\n    this.getAllAuthors = this.getAllAuthors.bind(this);\r\n    this.updatePublished = this.updatePublished.bind(this);\r\n    this.updateLocation = this.updateLocation.bind(this);\r\n    this.deleteLocation = this.deleteLocation.bind(this);\r\n\r\n    this.state = {\r\n      currentLocation: {\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        published: false,\r\n        authorId:null,\r\n        latitude:null,\r\n        longitude:null\r\n\r\n      },\r\n      message: \"\",\r\n      loggedInUser: null,\r\n      isLoggedIn:false,\r\n      isMod: false,\r\n      isAdmin: false,\r\n      allAuthors:[]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const loggedInUser = AuthService.getCurrentUser();\r\n\r\n    if (loggedInUser) {\r\n      this.setState({\r\n        loggedInUser: loggedInUser.id,\r\n        isLoggedIn:true,\r\n        isMod: loggedInUser.roles.includes(\"ROLE_MODERATOR\"),\r\n        isAdmin: loggedInUser.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n    this.getLocation(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    const title = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentLocation: {\r\n          ...prevState.currentLocation,\r\n          title: title\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentLocation: {\r\n        ...prevState.currentLocation,\r\n        description: description\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeAuthorId(e) {\r\n    const authorId = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentLocation: {\r\n        ...prevState.currentLocation,\r\n        authorId: authorId\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeLatitude(e) {\r\n    const latitude = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentLocation: {\r\n        ...prevState.currentLocation,\r\n        latitude: latitude\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeLongitude(e) {\r\n    const longitude = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentLocation: {\r\n        ...prevState.currentLocation,\r\n        longitude: longitude\r\n      }\r\n    }));\r\n  }\r\n\r\n  getLocation(id) {\r\n    LocationDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentLocation: response.data\r\n        });\r\n        if (this.state.isAdmin) {\r\n          this.getAuthor(response.data.authorId);\r\n          this.getAllAuthors();\r\n        }\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  getAuthor(id) {\r\n    UserDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  getAllAuthors() {\r\n    UserDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          allAuthors:response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePublished(status) {\r\n    var data = {\r\n      id: this.state.currentLocation.id,\r\n      title: this.state.currentLocation.title,\r\n      description: this.state.currentLocation.description,\r\n      published: status,\r\n      authorId:this.state.currentLocation.authorId,\r\n      loggedInUser:this.state.loggedInUser\r\n    };\r\n\r\n    LocationDataService.update(this.state.currentLocation.id, data)\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          currentLocation: {\r\n            ...prevState.currentLocation,\r\n            published: status\r\n          },\r\n          message : response.data.message\r\n        }));\r\n        this.getLocation(this.state.currentLocation.id);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        this.getLocation(this.state.currentLocation.id);\r\n      });\r\n  }\r\n\r\n  updateLocation() {\r\n    LocationDataService.update(\r\n      this.state.currentLocation.id,\r\n      this.state.currentLocation\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: response.data.message\r\n        });\r\n        this.getLocation(this.state.currentLocation.id);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        this.getLocation(this.state.currentLocation.id);\r\n      });\r\n  }\r\n\r\n  deleteLocation() {    \r\n    LocationDataService.delete(this.state.currentLocation.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/locations')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentLocation } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentLocation ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Location</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={currentLocation.title}\r\n                  onChange={this.onChangeTitle}\r\n                />\r\n              </div>\r\n\r\n              {( (this.state.isMod || this.state.isAdmin) &&  currentLocation.authorId) && (\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"authorId\">Author</label>\r\n                  <select className=\"form-control\"\r\n                    id=\"authorId\"\r\n                    required\r\n                    value={currentLocation.authorId}\r\n                    onChange={this.onChangeAuthorId}\r\n                    name=\"authorId\">\r\n\r\n                    {\r\n                      this.state.allAuthors &&\r\n                      this.state.allAuthors.length != 0 &&\r\n                      this.state.allAuthors.map((author,index) => (\r\n                        <option value={author.id} key={author.id}>{author.username} ({author.email})</option>\r\n                      ))\r\n                    }\r\n                    \r\n                  </select>\r\n                </div>\r\n                ) }\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"latitude\">Latitude</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"latitude\"\r\n                  value={currentLocation.latitude || \"\"}\r\n                  onChange={this.onChangeLatitude}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"longitude\">Longitude</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"longitude\"\r\n                  value={currentLocation.longitude || \"\"}\r\n                  onChange={this.onChangeLongitude}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentLocation.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>\r\n                {currentLocation.published ? \"Published\" : \"Pending\"}\r\n              </div>\r\n            </form>\r\n\r\n            \r\n            {(this.state.loggedInUser == currentLocation.authorId || this.state.isMod || this.state.isAdmin) && (\r\n                <button\r\n                  className=\"badge badge-primary mr-2\"\r\n                  onClick={() => this.updatePublished(!currentLocation.published)}\r\n                >\r\n                  {currentLocation.published ? (\"UnPublish\") : (\"Publish\") }\r\n                </button>\r\n               )} \r\n\r\n                {(this.state.loggedInUser == currentLocation.authorId || this.state.isMod || this.state.isAdmin) && (\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"badge badge-success mr-2\"\r\n                  onClick={this.updateLocation}\r\n                >\r\n                  Update\r\n                </button>\r\n                )}\r\n\r\n\r\n\r\n            {this.state.isAdmin && (\r\n                <button\r\n                  className=\"badge badge-danger\"\r\n                  onClick={this.deleteLocation}\r\n                >\r\n                  Delete\r\n                </button>\r\n              )}\r\n\r\n\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Location...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport LocationDataService from \"../services/location.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Toggle from 'react-toggle'; \r\nimport \"react-toggle/style.css\";\r\n\r\nexport default class LocationsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n    this.onToggleOwnFilter = this.onToggleOwnFilter.bind(this);\r\n    this.retrieveLocations = this.retrieveLocations.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveLocation = this.setActiveLocation.bind(this);\r\n    this.removeAllLocations = this.removeAllLocations.bind(this);\r\n    this.searchTitle = this.searchTitle.bind(this);\r\n\r\n    this.state = {\r\n      locations: [],\r\n      currentLocation: null,\r\n      currentIndex: -1,\r\n      searchTitle: \"\",\r\n      loggedInUser: null,\r\n      isLoggedIn:false,\r\n      isMod: false,\r\n      isAdmin: false,\r\n      hideOtherAuthors:false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const loggedInUser = AuthService.getCurrentUser();\r\n\r\n    if (loggedInUser) {\r\n      this.setState({\r\n        loggedInUser: loggedInUser.id,\r\n        isLoggedIn:true,\r\n        isMod: loggedInUser.roles.includes(\"ROLE_MODERATOR\"),\r\n        isAdmin: loggedInUser.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n      console.log(loggedInUser);\r\n    }\r\n    this.retrieveLocations();\r\n  }\r\n\r\n  onChangeSearchTitle(e) {\r\n    const searchTitle = e.target.value;\r\n\r\n    this.setState({\r\n      searchTitle: searchTitle\r\n    });\r\n  }\r\n\r\n  onToggleOwnFilter(e) {\r\n    const value = e.target.value;\r\n    this.setState({\r\n      hideOtherAuthors:!this.state.hideOtherAuthors\r\n    });\r\n    this.setState({\r\n      currentLocation: null,\r\n      currentIndex: -1\r\n    });\r\n\r\n    if (!this.state.hideOtherAuthors) {\r\n      LocationDataService.findByAuthor(this.state.loggedInUser)\r\n      .then(response => {\r\n        this.setState({\r\n          locations: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    } else {\r\n      this.retrieveLocations();\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  retrieveLocations() {\r\n    LocationDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          locations: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveLocations();\r\n    this.setState({\r\n      currentLocation: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveLocation(location, index) {\r\n    this.setState({\r\n      currentLocation: location,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllLocations() {\r\n    LocationDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchTitle() {\r\n    this.setState({\r\n      currentLocation: null,\r\n      currentIndex: -1\r\n    });\r\n\r\n    LocationDataService.findByTitle(this.state.searchTitle)\r\n      .then(response => {\r\n        this.setState({\r\n          locations: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { searchTitle, locations, currentLocation, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by title\"\r\n              value={searchTitle}\r\n              onChange={this.onChangeSearchTitle}\r\n            />\r\n\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchTitle}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n        <label>\r\n            <Toggle\r\n              defaultChecked={this.state.hideOtherAuthors}\r\n              onChange={this.onToggleOwnFilter} />\r\n              <br/>\r\n            <span>Show only my locations</span>\r\n          </label>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Locations List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {locations &&\r\n              locations.map((location, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveLocation(location, index)}\r\n                  key={index}\r\n                >\r\n                  {location.title}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          \r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentLocation ? (\r\n            <div>\r\n              <h4>Location</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Title:</strong>\r\n                </label>{\" \"}\r\n                {currentLocation.title}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Description:</strong>\r\n                </label>{\" \"}\r\n                {currentLocation.description}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>{\" \"}\r\n                {currentLocation.published ? \"Published\" : \"Pending\"}\r\n              </div>\r\n              {(this.state.loggedInUser == currentLocation.authorId || this.state.isMod || this.state.isAdmin) && (\r\n                <Link\r\n                  to={\"/admin/locations/\" + currentLocation.id}\r\n                  className=\"badge badge-warning\"\r\n                >\r\n                  Edit\r\n                </Link>\r\n              )}\r\n              \r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Location...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport UserDataService from \"../services/user.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class AddUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeRole = this.onChangeRole.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.saveUser = this.saveUser.bind(this);\r\n    this.newUser = this.newUser.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      username: \"\",\r\n      email: \"\", \r\n      role:1,\r\n      password:\"\",\r\n      success: false,\r\n      message:\"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeRole(e) {\r\n    this.setState({\r\n      role: e.target.value\r\n    });\r\n  }\r\n\r\n  saveUser(e) {\r\n    e.preventDefault();\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      var data = {\r\n        user : {\r\n          username: this.state.username,\r\n          email: this.state.email,\r\n          password: this.state.password,\r\n          role:this.state.role\r\n        }\r\n        \r\n      };\r\n\r\n      UserDataService.create(data)\r\n        .then(response => {\r\n          console.log(response);\r\n          if (response.data.success) {\r\n            this.setState({\r\n              id: response.data.user.id,\r\n              username: response.data.user.username,\r\n              email: response.data.user.email,\r\n              role: response.data.user.role,\r\n\r\n              success: response.data.success,\r\n              message:response.data.message\r\n            });\r\n          } else {\r\n            this.setState({\r\n\r\n              success: response.data.success,\r\n              message:response.data.message\r\n            });\r\n          }\r\n          \r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n      }\r\n  }\r\n\r\n  newUser() {\r\n    this.setState({\r\n      id: null,\r\n      email: \"\",\r\n      username: \"\",\r\n      password:\"\",\r\n      role: 1,\r\n      message:\"\",\r\n      success: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.success ? (\r\n          <div>\r\n            <h4>{this.state.message}</h4>\r\n            <a className=\"btn\" href={'/admin/users/' + this.state.id}>\r\n              View user\r\n            </a>\r\n            <button className=\"btn\" onClick={this.newUser}>\r\n              Add another user\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h4>Add new user</h4>\r\n            <Form\r\n            onSubmit={this.saveUser}\r\n              ref={c => {\r\n                this.form = c;\r\n              }}\r\n            >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"username\"\r\n                validations={[required, vusername]}\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                name=\"username\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                validations={[required, email]}\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                name=\"email\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                validations={[required, vpassword]}\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                name=\"password\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"role\">Role</label>\r\n              <select className=\"form-control\"\r\n                id=\"role\"\r\n                required\r\n                value={this.state.role}\r\n                onChange={this.onChangeRole}\r\n                name=\"role\">\r\n                <option value=\"1\">User</option>\r\n                <option value=\"2\">Moderator</option>\r\n                <option value=\"3\">Admin</option>\r\n              </select>\r\n              \r\n            </div>\r\n\r\n           \r\n\r\n            <button className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n            </Form>\r\n          </div>\r\n\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport UserDataService from \"../services/user.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeDoUpdatePassword = this.onChangeDoUpdatePassword.bind(this);\r\n    this.onChangeRoleId = this.onChangeRoleId.bind(this);\r\n    this.getUser = this.getUser.bind(this);\r\n    this.updateUser = this.updateUser.bind(this);\r\n    this.deleteUser = this.deleteUser.bind(this);\r\n\r\n    this.state = {\r\n      currentUser: {\r\n        id: null,\r\n        username: \"\",\r\n        email: \"\",\r\n        roleId: 0,\r\n        password:\"\"\r\n      },\r\n      message: \"\",\r\n      isLoggedIn:false,\r\n      isAdmin:false,\r\n      isMod:false,\r\n      loggedInUser:0,\r\n      newPassword : \"\",\r\n      doUpdatePassword : false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const loggedInUser = AuthService.getCurrentUser();\r\n\r\n    if (loggedInUser) {\r\n      this.setState({\r\n        loggedInUser: loggedInUser.id,\r\n        isLoggedIn:true,\r\n        isMod: loggedInUser.roles.includes(\"ROLE_MODERATOR\"),\r\n        isAdmin: loggedInUser.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n\r\n    if (this.props.match !== undefined) {\r\n      this.getUser(this.props.match.params.id);\r\n    } else {\r\n      this.getUser(this.props.id);\r\n    }\r\n    console.log(this.state.currentUser);\r\n  }\r\n\r\n  onChangeDoUpdatePassword(e) {\r\n    this.setState({\r\n      doUpdatePassword : !this.state.doUpdatePassword\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    const newPassword = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentUser: {\r\n          ...prevState.currentUser,\r\n          password: newPassword\r\n        },\r\n        newPassword:newPassword\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    const username = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentUser: {\r\n          ...prevState.currentUser,\r\n          username: username\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    const email = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentUser: {\r\n        ...prevState.currentUser,\r\n        email: email\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeRoleId(e) {\r\n    const roleId = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentUser: {\r\n        ...prevState.currentUser,\r\n        roleId: roleId\r\n      }\r\n    }));\r\n  }\r\n\r\n  getUser(id) {\r\n    UserDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentUser: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  updateUser(e) {\r\n\r\n    e.preventDefault();\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n\r\n      UserDataService.update(\r\n        this.state.currentUser.id, { \r\n          user : this.state.currentUser,\r\n          updatePassword : this.state.newPassword ? true : false\r\n        }\r\n        \r\n      )\r\n        .then(response => {\r\n          console.log(\"updated\");\r\n          console.log(response.data);\r\n          this.getUser(this.state.currentUser.id);\r\n          this.setState(function (prevState) {\r\n            return {\r\n              message: response.data.message,\r\n              newPassword:\"\",\r\n              doUpdatePassword : false\r\n            }\r\n            \r\n          });\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n      }\r\n  }\r\n\r\n  deleteUser() {    \r\n    UserDataService.delete(this.state.currentUser.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/admin/users')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, isAdmin, loggedInUser, newPassword, doUpdatePassword } = this.state;\r\n\r\n    var roles = {\r\n      0 : \"\",\r\n      1 : \"User\",\r\n      2 : \"Moderator\",\r\n      3 : \"Admin\"\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {currentUser ? (\r\n          <div className=\"edit-form\">\r\n            <h4>{currentUser.username}</h4>\r\n            <Form\r\n              onSubmit={this.saveUser}\r\n              ref={c => {\r\n                this.form = c;\r\n              }}\r\n            >\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"username\"\r\n                  validations={[required, vusername]}\r\n                  value={currentUser.username}\r\n                  onChange={this.onChangeUsername}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  validations={[required, email]}\r\n                  value={currentUser.email}\r\n                  onChange={this.onChangeEmail}\r\n                />\r\n              </div>\r\n             \r\n              {isAdmin && loggedInUser !== currentUser.id ? (\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"roleId\">Role</label>\r\n                  <select className=\"form-control\"\r\n                    id=\"roleId\"\r\n                    required\r\n                    value={currentUser.roleId}\r\n                    onChange={this.onChangeRoleId}\r\n                    name=\"roleId\">\r\n                    <option value=\"1\">User</option>\r\n                    <option value=\"2\">Moderator</option>\r\n                    <option value=\"3\">Admin</option>\r\n                  </select>\r\n                </div>\r\n              ) : (\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"roleDisplay\">Role</label>\r\n                  <Input disabled \r\n                    className=\"form-control\" \r\n                    id=\"roleDisplay\" \r\n                    name=\"roleDisplay\"\r\n                    value={roles[currentUser.roleId]}\r\n                    />\r\n                </div>\r\n              )\r\n              }\r\n              {((isAdmin || loggedInUser === currentUser.id) && !doUpdatePassword) && (\r\n                <div className=\"form-group\">\r\n                  <button\r\n                    className=\"badge\"\r\n                    onClick={this.onChangeDoUpdatePassword}\r\n                  >\r\n                    Change password\r\n                  </button>\r\n                </div>\r\n              )\r\n              }\r\n               {((isAdmin || loggedInUser === currentUser.id) && doUpdatePassword) && (\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input \r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                    validations={[vpassword]}\r\n                    value={newPassword}\r\n                    onChange={this.onChangePassword}\r\n                    name=\"password\"\r\n                  />\r\n                </div>\r\n              )\r\n              }\r\n            \r\n            {(isAdmin && loggedInUser !== currentUser.id) && (\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteUser}\r\n            >\r\n              Delete\r\n            </button>\r\n            )}\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateUser}\r\n            >\r\n              Update\r\n            </button>\r\n\r\n\r\n              <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n              \r\n            </Form>\r\n\r\n            \r\n             \r\n            \r\n            \r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a User...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport UserDataService from \"../services/user.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class UsersList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchUsername = this.onChangeSearchUsername.bind(this);\r\n    this.retrieveUsers = this.retrieveUsers.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveUser = this.setActiveUser.bind(this);\r\n    this.removeAllUsers = this.removeAllUsers.bind(this);\r\n    this.searchUsername = this.searchUsername.bind(this);\r\n\r\n    this.state = {\r\n      users: [],\r\n      currentUser: null,\r\n      currentIndex: -1,\r\n      searchUsername: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveUsers();\r\n  }\r\n\r\n  onChangeSearchUsername(e) {\r\n    const searchUsername = e.target.value;\r\n\r\n    this.setState({\r\n      searchUsername: searchUsername\r\n    });\r\n  }\r\n\r\n  retrieveUsers() {\r\n    UserDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          users: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveUsers();\r\n    this.setState({\r\n      currentUser: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveUser(user, index) {\r\n    this.setState({\r\n      currentUser: user,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllUsers() {\r\n    UserDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchUsername() {\r\n    this.setState({\r\n      currentUsername: null,\r\n      currentIndex: -1\r\n    });\r\n\r\n    UserDataService.findByUsername(this.state.searchUsername)\r\n      .then(response => {\r\n        this.setState({\r\n          users: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { searchUsername, users, currentUser, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by username\"\r\n              value={searchUsername}\r\n              onChange={this.onChangeSearchUsername}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchUsername}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Users List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {users &&\r\n              users.map((user, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveUser(user, index)}\r\n                  key={index}\r\n                >\r\n                  {user.username}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          \r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentUser ? (\r\n            <div>\r\n              <h4>User</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Username:</strong>\r\n                </label>{\" \"}\r\n                {currentUser.username}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Email:</strong>\r\n                </label>{\" \"}\r\n                {currentUser.email}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Role:</strong>\r\n                </label>{\" \"}\r\n                {currentUser.role}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/admin/users/\" + currentUser.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a user</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\n\r\nexport default function PrivateRoute ({component: Component, auth, authCheckComplete, ...rest}) {\r\n\tconsole.log(\"auth: \" + auth);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => authCheckComplete === false\r\n      \t? <div></div>\r\n      \t: auth === true\r\n        \t? <Component {...props} />\r\n        \t: <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\r\n    />\r\n  )\r\n}\r\n\r\n\r\n\r\n/*\r\n\r\nexport default class PrivateRoute extends Component {\r\n\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<Route\r\n\t\t      {...this.rest}\r\n\t\t      render={(props) => this.auth === false\r\n\t\t        ? <Component {...this.props} />\r\n\t\t        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\r\n\t\t    />\r\n\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\n*/","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.email, this.state.password).then(\r\n        () => {\r\n          console.log(this.props);\r\n          //this.props.history.push(\"/profile\");\r\n          //window.location.reload();\r\n          window.location.pathname=\"/admin/locations\";\r\n          \r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[required, email]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n          <a href=\"./reset-password\">Password reset</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.resetPassword = this.resetPassword.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password:\"\",\r\n      token:\"\",\r\n      id:0,\r\n      loading: true,\r\n      message: \"\",\r\n      success: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.match.params);\r\n    if (this.props.match === undefined) {\r\n      this.setState({\r\n        loading:false,\r\n        message : \"No valid token found.\"\r\n      });\r\n    } else {\r\n      AuthService.checkToken(this.props.match.params.id, this.props.match.params.token).then(\r\n        response => {\r\n          console.log(response);\r\n          this.setState({\r\n            loading:false,\r\n            message:response.message,\r\n            token:this.props.match.params.token,\r\n            id:this.props.match.params.id,\r\n            success:response.success\r\n          })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  resetPassword(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.resetPassword(\r\n        this.state.email,\r\n        this.state.token,\r\n        this.state.id,\r\n        this.state.password\r\n      ).then(\r\n        (response) => {\r\n          console.log(response);\r\n          this.setState({\r\n            loading: false,\r\n            message: response.message,\r\n            success:response.success\r\n\r\n          });\r\n          \r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n\r\n\r\n          <Form\r\n            onSubmit={this.resetPassword}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n\r\n          {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className={this.state.success ? 'alert alert-success' : 'alert alert-danger'} role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required, vpassword]}\r\n              />\r\n            </div>\r\n\r\n            \r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Set new password</span>\r\n              </button>\r\n            </div>\r\n\r\n            \r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class RequestToken extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.requestToken = this.requestToken.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  requestToken(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.requestToken(this.state.email).then(\r\n        (data) => {\r\n          console.log(data);\r\n          this.setState({\r\n            loading: false,\r\n            message: data.message\r\n          });\r\n          \r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.requestToken}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[required, email]}\r\n              />\r\n            </div>\r\n\r\n            \r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Reset password</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>Save Public Housing Collective</h3>\r\n          <h1>Melbourne Estate Map</h1>\r\n          <p>SPHC is working to document the demolition and rebuilding of public housing estates across Melbourne.</p>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport User from \"../components/user.component\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser()\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        \r\n        <User id={currentUser.id}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/*\r\n\r\n\r\n<header className=\"jumbotron\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong>\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n*/","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddLocation from \"./components/add-location.component\";\nimport Location from \"./components/location.component\";\nimport LocationsList from \"./components/locations-list.component\";\n\nimport AddUser from \"./components/add-user.component\";\nimport User from \"./components/user.component\";\nimport UsersList from \"./components/users-list.component\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport PrivateRoute from \"./components/private-route.component\";\nimport Login from \"./components/login.component\";\nimport ResetPassword from \"./components/reset-password.component\";\nimport RequestToken from \"./components/request-token.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      authCheckComplete:false,\n      isLoggedIn:false,\n      isMod: false,\n      isAdmin: false,\n      currentUser: undefined,\n    };\n\n    \n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n    console.log(\"user\");\n    console.log(user);\n    if (user) {\n      this.setState({\n        currentUser: user,\n        isLoggedIn:user?true:false,\n        isMod: user.roles.includes(\"ROLE_MODERATOR\"),\n        isAdmin: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n    this.setState({\n      authCheckComplete : true\n    });\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n  render() {\n\n    const { currentUser, isLoggedIn, isMod, isAdmin, authCheckComplete } = this.state;\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/\" className=\"navbar-brand\">\n            SPHC Melbourne Map\n          </a>\n          {currentUser && (\n            <div className=\"navbar-nav \">\n              <li className=\"nav-item\">\n                <Link to={\"/admin/locations\"} className=\"nav-link\">\n                  Locations\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={\"/admin/locations/add\"} className=\"nav-link\">\n                  Add Location\n                </Link>\n              </li>\n            </div>\n            )}\n            \n\n            {isAdmin && (\n              <div className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                  <Link to={\"/admin/users\"} className=\"nav-link\">\n                    Users\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={\"/admin/users/add\"} className=\"nav-link\">\n                    Add User\n                  </Link>\n                </li>\n              </div>\n              \n            )}\n\n            \n          \n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  My profile\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  Log out\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Log in\n                </Link>\n              </li>\n\n              \n            </div>\n          )}\n\n        </nav>\n\n        <div className=\"container mt-3\">\n          \n            <Switch>\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\n\n              <PrivateRoute auth={isLoggedIn} authCheckComplete={authCheckComplete} exact path={[\"/admin/locations\"]} component={LocationsList} />\n              <PrivateRoute auth={isLoggedIn} authCheckComplete={authCheckComplete} path={[\"/admin/locations/add\"]} component={AddLocation} />\n              <PrivateRoute auth={isLoggedIn} authCheckComplete={authCheckComplete} path={[\"/admin/locations/:id\"]} component={Location} />\n\n              <PrivateRoute auth={isAdmin} authCheckComplete={authCheckComplete} exact path={[\"/admin/users\"]} component={UsersList} />\n              <PrivateRoute auth={isAdmin} authCheckComplete={authCheckComplete} path={[\"/admin/users/add\"]} component={AddUser} />\n              <PrivateRoute auth={isAdmin} authCheckComplete={authCheckComplete} path={[\"/admin/users/:id\"]} component={User} />\n\n              <PrivateRoute auth={isLoggedIn} authCheckComplete={authCheckComplete} exact path={[\"/profile\"]} component={Profile} />\n                                \n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/reset-password\" component={RequestToken} />\n              <Route path=\"/reset-password/:id/:token\" component={ResetPassword} />\n\n            </Switch>\n        \n        </div>\n      </div>\n    );\n  }\n\n \n}\n\nexport default App;","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardModerator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getModeratorBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAdminBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}